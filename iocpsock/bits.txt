proc accept {s addr port} {
    puts "new connection from $addr:$port on $s"
    fconfigure $s -blocking no
    fileevent $s readable [list gotRead $s]
}
proc gotRead {s} {
    if {[string length [set e [fconfigure $s -error]]]} {
	puts "error: $s: $e"
	close $s
	return
    }
    puts "$s: got >>[gets $s]<<"
    if {[eof $s]} {
	puts "$s: eof reached"
	close $s
    }
}
load iocpsock.dll
set s [socket2 -server accept -myaddr [info hostname] 1234]


proc doit {} {set s [socket [info host] 1234];puts $s "lala";flush $s;return $s}


http://localhost/macClasII_2.hfx

d:/tclhttpdCVS/tclhttpd/bin/httpd.tcl -debug 1 -threads 0 -port 80 -webmaster davygrvy@pobox.com

package require Thread
set t [thread::create {package require Iocpsock; set s [socket2 -server asd 1234]; thread::wait}]
thread::send -async $t {thread::unwind}

set s [socket2 3ffe:b80:185d:1::29 ftp]
set s [socket2 FEDCBA98:1A2B3C5D7E9F 0453]