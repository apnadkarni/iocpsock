2003-04-30  davygrvy

	=== TAGGED for version 1.0 ===

	* bits.txt:
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		Yet again (but this is good), all bugs fixed.

2003-03-29  davygrvy
	* iocpsock.h:
	* iocpsock_lolevel.c:
		absolutely final edits for 1.0

2003-03-26  davygrvy
	* iocpsock.h:
	* iocpsock_hilevel.c:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		final changes.  This is version 1.0, done.

2003-03-21  davygrvy
	* iocpsock_lolevel.c:
		Much harder...  As bullet proof as a tank.

	* iocpsock.h:
		matched to other source changes

	* ws2tcp.c:
		small trim.

	* ws2tcp.c:
		removed an unused local var.

2003-03-19  davygrvy
	* iocpsock_lolevel.c:
		commentary additions

	* ws2tcp.c:
		Added missing code to setup recieving data on a blocking
		connected socket.  Whoops!

2003-03-15  davygrvy
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		Tried to add a socket recyclebin, but the complexity is a bit
		much for now.  Maybe later I'll add it.  Not now.

2003-03-15  davygrvy
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		Tried to add a socket recyclebin, but the complexity is a bit
		much for now.  Maybe later I'll add it.  Not now.

2003-03-14  davygrvy
	* iocpsock.h:
	* ws2apltalk.c:
	* ws2atm.c:
	* ws2decnet.c:
	* ws2ipx.c:
	* ws2irda.c:
	* ws2isotp4.c:
	* ws2netbios.c:
	* ws2tcp.c:
	* ws2udp.c:
	* ws2vines.c:
		WS2ProtoData struct changed to add DisconnectEx and
		TransmitFile().

	* bits.txt:
		just some test scripts.

	* iocpsock_static.dsp:
		new static build project

	* .cvsignore:
		more globs

	* ws2tcp.c:
		Tested under WinXP, fixed all ConnectEx problems.

	* dllmain.c:
		set project version to 1.0

2003-03-02  davygrvy
	* iocpsock_lolevel.c:
		replaced inet_ntoa() with WSAAddressToString for -sockname and
		-peername fconfigures.  More work needed to neutralize these.

	* .cvsignore:
		added UI resource temp file to glob list.

2003-03-01  davygrvy
	* dllmain.c:
	* iocpsock.rc:
	* iocpsock_lolevel.c:
	* readme.txt:
		preparing for the 0.99 release.

2003-03-01  davygrvy

	== TAGGED iocpsock_0_99 ==

	* dllmain.c:
	* iocpsock.rc:
	* iocpsock_lolevel.c:
	* readme.txt:
		preparing for the 0.99 release.

2003-02-28  davygrvy
	* iocpsock_lolevel.c:
		All resource leaks fixed!

2003-02-27  davygrvy
	* iocpsock_lolevel.c:
		ANDing the ones compliment is not the same as XORing.  Silly me.
		
		Decided to do absolute closesocket in the DriverCloseProc instead of the
		delay/lazy close I was doing before.

	* iocpsock.h:
	* iocpsock_lolevel.c:
		Added a way to turn off/on burst detection for compiling while
		this is being studied

2003-02-26  davygrvy
	* iocpsock_lolevel.c:
		more better fixed than last fix for the Tcl_Close problem for
		when *we* are intiating the close.

	* iocpsock_lolevel.c:
		problem closing sockets fixed.

	* iocpsock_lolevel.c:
		fixed error in last fix.

2003-02-22  davygrvy
	* dllmain.c:
		STATIC_BUILD case added.

2003-02-21  davygrvy
	* iocpsock_lolevel.c:
		small cruft/lint.

2003-02-20  davygrvy
	* iocpsock_lolevel.c:
		buffer clean-up problem fixed in PostOverlappedAccept and
		PostOverlappedRecv.

2003-02-19  davygrvy
	* readme.txt:
		set date.

	* iocpsock.h:
		master configs changed a bit.  Needs study to determine best
		load behavior.

	* ws2tcp.c:
		Made sure ipv6 sockaddr was not used when getting localhost in
		passive lookup.

	* iocpsock_lolevel.c:
		InitSockets) Initialize*SubSystem call missed when winsock
		loaded the 1.1 interface.

2003-02-17  davygrvy
	* iocpsock.h:
	* iocpsock_lolevel.c:
		small fix for the Oct`02 SDK's wspiapi.h.  It needed
		WSASetLastError, which the may`02 SDK didn't use.

	* readme.txt:
		added notes on ipv6

	* dllmain.c:
		removed the puts to stderr on load.

	* iocpsock.rc:
	* resource.h:
		(new) resource files

	* iocpsock.dsp:
		rc file.

2003-02-17  davygrvy

	== Tagged iocpsock_0_5 ==

	* iocpsock.h:
	* iocpsock_lolevel.c:
		small fix for the Oct`02 SDK's wspiapi.h.  It needed
		WSASetLastError, which the may`02 SDK didn't use.

	* readme.txt:
		added notes on ipv6

	* dllmain.c:
		removed the puts to stderr on load.

	* iocpsock.rc:
	* resource.h:
		(new) resource files

	* iocpsock.dsp:
		rc file.

	* bits.txt:
	* ws2tcp.c:
		When more than one sockaddr is returned from getaddrinfo, 
		choose ipv4.  Only when specifically asking for ipv6 should we
		use it.

2003-02-16  davygrvy
	* readme.txt:
		made note of recent changes

	* readme.txt:
		slight mods.

	* iocpsock_lolevel.c:
		(HandleIo) only set addr_storage when it's going to be used.

	* iocpsock_lolevel.c:
		Protect IocpLLDestroy from a NULL.

	* bits.txt:
	* iocpsock.dsp:
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		Now supports ipv6

	* ws2irda.c:
		added some sample code for future reference.

	* readme.txt:
		speling

	* license.terms:
		new

	* iocpsock.h:
		Fixed most all C++ style comments.

2003-02-15  davygrvy
	* iocpsock.h:
	* iocpsock_lolevel.c:
		Added IocpLLGetCount() for safe access in IocpEventCheckProc().

	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		PostOverlappedAccept() now reallocs the buffer to include the
		address space.  Address space is now the protocol specific size
		 which is good.  Calling PostOverlappedAccept with a buffer of
		zero now means don't receive with the accept.

	* iocpsock_lolevel.c:
	* ws2tcp.c:
		better error checking calling PostOverlappedAccept().

	* ws2ipx.c:
		all 5 types catagorized.

	* readme.txt:
		added bits about v0.4, done so far.

	* iocpsock_lolevel.c:
		wsaErrorTable2 wasn't large enough.  Filled the holes to get it
		right.

	* iocpsock_lolevel.c:
		Moved operations in HandleIo() to a switch inplace of the if
		else if/else if...

2003-02-15  davygrvy
	* dllmain.c:
	* iocpsock_lolevel.c:
		Now works under threads.  Yet another overly complex manner of
		asyncronous shutdown that needed to be traced to find the
		obscure code paths of fourth dimensional thinking that comes
		with the nature of the beast.  Yes, threads are beasty.

2003-02-14  davygrvy
	* iocpsock_lolevel.c:
		small error code changes that mean nothing in the big picture.

	* readme.txt:
		update the prose

	* tclhttpd.patch.txt:
		new file

	* readme.txt:
		update the prose, again edited.

	* iocpsock_lolevel.c:
		OP_ACCEPT logic in HandleIo changed to report a zero byte read, but only
		post another WSARecv when more than zero bytes -- just like OP_READ.

	* hackersguide.txt:
		CompletionThread name changed to CompletionThreadProc

	* readme.txt:
		update the prose, again.

2003-02-14  davygrvy
	== Tagged iocpsock_0_3 ==

	* iocpsock_lolevel.c:
		small error code changes that mean nothing in the big picture.

	* readme.txt:
		update the prose

	* tclhttpd.patch.txt:
		new file

	* readme.txt:
		update the prose, again edited.

	* iocpsock_lolevel.c:
		OP_ACCEPT logic in HandleIo changed to report a zero byte read, but only
		post another WSARecv when more than zero bytes -- just like OP_READ.

	* hackersguide.txt:
		CompletionThread name changed to CompletionThreadProc

	* readme.txt:
		update the prose, again.

2003-02-13  davygrvy
	* ws2tcp.c:
	* ws2udp.c:
		Do proper clean-up on errors.

	* iocpsock.h:
	* iocpsock_lolevel.c:
		Watchdog DOS thread turned on.

	* iocpsock_lolevel.c:
		Moved the critical section locks in the watchdog routine to just where it was
		needed.

	* ws2tcp.c:
		server sockets will add themselves to the global list of
		listening sockets.

	* ws2udp.c:
		a scratchpad of ideas.

	* iocpsock.h:
	* iocpsock_lolevel.c:
		watchdog DOS thread almost ready to be turned on.

	* iocpsock_lolevel.c:
		When closing an infoPtr, we must pop itself off the global
		listening list, too.

	* dllmain.c:
		write a load notice to stderr.

	* bits.txt:
		scratchpad.

2003-02-12  davygrvy
	* iocpsock_lolevel.c:
		Added socket cleanup in FreeBufferObj() for when pending listening sockets
		come back with WSA_OPERATION_ABORTED.

	* iocpsock_lolevel.c:
		FreeBufferObj() needed to pop itself off any pending lists it
		may be on!

2003-02-11  davygrvy
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		Pending accepts now stored in a linked-list.  Later when the watchdog
		thread is made, we can traverse the lists.

	* hackersguide.txt:
	* iocpsock.h:
	* iocpsock_lolevel.c:
		WatchDogThread partially added, but not turned on, yet.

	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2apltalk.c:
	* ws2atm.c:
	* ws2decnet.c:
	* ws2ipx.c:
	* ws2irda.c:
	* ws2isotp4.c:
	* ws2netbios.c:
	* ws2tcp.c:
	* ws2udp.c:
	* ws2vines.c:
		Removed DisconnectEx() from the WS2ProtocolData struct.  We won
		t be using it.

	* iocpsock.h:
	* iocpsock_lolevel.c:
		Removed llPendingSend member of the SocketInfo struct.  It wasn't needed.
		Winsock itself acts as the queue.

	* hackersguide.txt:
		new file

2003-02-10  daveg
	* ws2tcp.c:
		Added blocking connect().

	* dllmain.c:
	* readme.txt:
		moved version up to 0.2

	* ws2tcp.c:
		Double HandleIo() call following immediate ConnectEx() return
		fixed.

	* iocpsock.h:
	* iocpsock_lolevel.c:
	* readme.txt:
		SocketInfo clean-up now working properly.

2003-02-06  daveg
	* ws2tcp.c:
		removed some cruft.

	* bits.txt:
	* dllmain.c:
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		receive overlapped stuffing and TCL_WRITABLE issues resolved. 
		Works nice.

2003-02-05  daveg
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		Found ConnectEx problem...  What to do???

	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2tcp.c:
		More ConnectEx work.

2003-02-04  daveg
	* iocpsock.h:
	* iocpsock_lolevel.c:
		error handling addressed, but unknown working status.  EOF
		works...

	* iocpsock.dsp:
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* ws2apltalk.c:
	* ws2atm.c:
	* ws2decnet.c:
	* ws2ipx.c:
	* ws2irda.c:
	* ws2isotp4.c:
	* ws2netbios.c:
	* ws2tcp.c:
	* ws2udp.c:
	* ws2vines.c:
		starting to add ConnectEx and DisconnectEx.  Worked on comment
		blocks.

2003-02-03  daveg
	* iocpsock.dsp:
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* iocpsock_util.c:
	* iocpsock_util.h:
	* ws2apltalk.c:
	* ws2atm.c:
	* ws2decnet.c:
	* ws2ipx.c:
	* ws2irda.c:
	* ws2isotp4.c:
	* ws2netbios.c:
	* ws2tcp.c:
	* ws2udp.c:
	* ws2vines.c:
		works nice.  need to get square on error handling.

2003-02-02  daveg
	* .cvsignore:
	* iocpsock.h:
	* iocpsock_lolevel.c:
	* iocpsock_util.c:
	* iocpsock_util.h:
	* ws2tcp.c:
		In a good state.  accept fires the accept proc in Tcl.  receives untested.  free
		buffer stack 1/2 implimented.  Tcl_DriverInputProc looks good, untested.
		Can't send yet.  Socket error handling needs to be addressed.

2003-01-22  daveg
	* dllmain.c:
	* iocpsock.dsp:
	* iocpsock.dsw:
	* iocpsock.h:
	* iocpsock_hilevel.c:
	* iocpsock_lolevel.c:
	* iocpsock_util.c:
	* iocpsock_util.h:
	* ws2apltalk.c:
	* ws2atm.c:
	* ws2decnet.c:
	* ws2ipx.c:
	* ws2irda.c:
	* ws2isotp4.c:
	* ws2netbios.c:
	* ws2tcp.c:
	* ws2udp.c:
	* ws2vines.c:
		initial population

